@use 'sass:map';
@use '../../styles/variables';
@use '../../styles/functions';

.container {
  background-color: variables.$colorBlack;
  width: 100%;
  margin-top: functions.map-deep-get(variables.$margins, 'mobile', 1) * 2;

  @media (min-width: map.get(variables.$newBreakpoints, 'tablet')) {
    margin-top: functions.map-deep-get(variables.$margins, 'tablet', 1) * 2;
  }

  @media (min-width: map.get(variables.$newBreakpoints, 'desktop1')) {
    margin-top: functions.map-deep-get(variables.$margins, 'desktop1', 1) * 2;
  }

  @media (min-width: map.get(variables.$newBreakpoints, 'desktop2')) {
    margin-top: functions.map-deep-get(variables.$margins, 'desktop2', 2) * 2;
  }

  .content {
    display: grid;
    width: 100%;
    padding: functions.map-deep-get(variables.$margins, 'mobile', 2) 0;
    grid-template-columns: 1fr;
    grid-row-gap: functions.map-deep-get(variables.$margins, 'mobile', 3);
    justify-items: center;

    @media (min-width: map.get(variables.$newBreakpoints, 'tablet')) {
      padding-top: functions.map-deep-get(variables.$margins, 'tablet', 2);
      grid-gap: functions.map-deep-get(variables.$margins, 'tablet', 3);
      justify-items: normal;
      grid-template-columns: 1fr 1fr;
    }

    @media (min-width: map.get(variables.$newBreakpoints, 'desktop1')) {
      grid-template-columns: 1fr 1fr 1fr 1fr;
      padding: functions.map-deep-get(variables.$margins, 'desktop1', 2) 0;
    }

    @media (min-width: map.get(variables.$newBreakpoints, 'desktop2')) {
      grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
      padding: functions.map-deep-get(variables.$margins, 'desktop2', 3) 0;
    }

    & > * {
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;

      @media (min-width: map.get(variables.$newBreakpoints, 'tablet')) {
        align-items: normal;
        text-align: left;
      }
    }

    & > *:nth-child(5) {
      @media (min-width: map.get(variables.$newBreakpoints, 'tablet')) and (max-width: map.get(variables.$newBreakpoints, 'desktop1')) {
        grid-column: 1 / 3;
        display: grid;
        grid-gap: functions.map-deep-get(variables.$margins, 'tablet', 3);
        grid-template-columns: 1fr 1fr;

        .footerItem {
          margin-bottom: 0;
        }
      }

      @media (min-width: map.get(variables.$newBreakpoints, 'desktop1')) {
        grid-column: 4 / 5;
      }

      @media (min-width: map.get(variables.$newBreakpoints, 'desktop2')) {
        grid-column: 5 / 6;
      }
    }

    & > *:nth-child(6) {
      font-size: 12px;

      @media (min-width: map.get(variables.$newBreakpoints, 'tablet')) {
        grid-column: 1 / 3;
      }

      @media (min-width: map.get(variables.$newBreakpoints, 'desktop1')) {
        grid-column: 1 / 5;
      }
    }

    .footerItem, .logo {
      margin-bottom: functions.map-deep-get(variables.$margins, 'mobile', 3);

      @media (min-width: map.get(variables.$newBreakpoints, 'tablet')) {
        margin-bottom: functions.map-deep-get(variables.$margins, 'tablet', 4);
      }

      &:last-child {
        margin-bottom: 0;
      }
    }

    .socialMediaLabel {
      margin-bottom: functions.map-deep-get(variables.$margins, 'mobile', 6);
    }

    .socialMediaContainer {
      display: flex;
      gap: functions.map-deep-get(variables.$margins, 'mobile', 3);

      @media (min-width: map.get(variables.$newBreakpoints, 'tablet')) {
        gap: functions.map-deep-get(variables.$margins, 'tablet', 4);
      }

      @media (min-width: map.get(variables.$newBreakpoints, 'desktop1')) {
        gap: functions.map-deep-get(variables.$margins, 'desktop1', 5);
      }

      @media (min-width: map.get(variables.$newBreakpoints, 'desktop2')) {
        gap: functions.map-deep-get(variables.$margins, 'desktop2', 6);
      }

      img {
        width: 32px;
        height: 32px;
        fill: variables.$colorSolidWhite;
        filter: brightness(0) saturate(100%) invert(100%) sepia(0%) saturate(2320%) hue-rotate(149deg) brightness(112%) contrast(95%);

        @media (min-width: map.get(variables.$newBreakpoints, 'tablet')) {
          width: 26px;
          height: 26px;
        }

        @media (min-width: map.get(variables.$newBreakpoints, 'desktop2')) {
          width: 40px;
          height: 40px;
        }
      }
    }

    * {
      color: variables.$colorSolidWhite;

      .buttonLink {
        color: variables.$colorSolidWhite;
      }
    }
  }
}